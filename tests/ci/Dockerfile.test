# Multi-stage Dockerfile for Hydra CLI testing environment
# Optimized for security, performance, and reliability

# Build stage
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    python3 \
    make \
    g++ \
    xmlstarlet \
    jq \
    curl \
    bash

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./
COPY tests/package*.json tests/

# Install dependencies with npm ci for reproducible builds
RUN npm ci --only=production --no-audit --prefer-offline

# Install test dependencies separately for better caching
RUN npm ci --only=development --no-audit --prefer-offline

# Verify critical test dependencies
RUN npx jest --version && \
    npx nyc --version && \
    node --version

# Copy source code and test files
COPY . .

# Verify file permissions and structure
RUN ls -la && \
    ls -la tests/ && \
    chmod +x tests/ci/test-runner.sh

# Production test image
FROM node:20-alpine AS test-runner

# Install runtime dependencies
RUN apk add --no-cache \
    xmlstarlet \
    jq \
    curl \
    bash \
    git \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Create non-root user for security
RUN addgroup -g 1000 hydra && \
    adduser -D -s /bin/bash -u 1000 -G hydra hydra

# Set working directory
WORKDIR /app

# Copy built application and dependencies from builder
COPY --from=builder --chown=hydra:hydra /app /app

# Create necessary directories with proper permissions
RUN mkdir -p /app/tests/coverage/reports \
    /app/tests/temp \
    /app/tests/artifacts \
    /app/.claude/epics && \
    chown -R hydra:hydra /app

# Create test workspace
RUN mkdir -p /tmp/hydra-test-workspace && \
    chown -R hydra:hydra /tmp/hydra-test-workspace

# Switch to non-root user
USER hydra

# Set environment variables
ENV NODE_ENV=test \
    CI=true \
    HYDRA_TEST_MODE=true \
    TEST_WORKSPACE=/tmp/hydra-test-workspace \
    PATH=/app/node_modules/.bin:$PATH

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node --version && npm --version

# Default command
CMD ["./tests/ci/test-runner.sh", "--type", "all"]

# Security test image with restricted permissions
FROM test-runner AS security-test

# Switch back to root for security configuration
USER root

# Apply security hardening
RUN apk add --no-cache \
    sudo \
    && rm -rf /var/cache/apk/*

# Configure restricted environment
RUN echo "hydra ALL=(ALL) NOPASSWD: /usr/bin/xmlstarlet, /usr/bin/jq" > /etc/sudoers.d/hydra && \
    chmod 0440 /etc/sudoers.d/hydra

# Remove unnecessary capabilities
RUN setcap -r /usr/bin/node 2>/dev/null || true

# Switch back to non-root user
USER hydra

# Override command for security tests
CMD ["./tests/ci/test-runner.sh", "--type", "security"]

# Stress test image with performance optimization
FROM test-runner AS stress-test

# Switch to root for system optimization
USER root

# Optimize for stress testing
RUN echo 'vm.max_map_count = 262144' >> /etc/sysctl.conf && \
    echo 'fs.file-max = 65536' >> /etc/sysctl.conf

# Install performance monitoring tools
RUN apk add --no-cache \
    htop \
    iotop \
    strace \
    && rm -rf /var/cache/apk/*

# Switch back to non-root user
USER hydra

# Set memory limits for stress testing
ENV NODE_OPTIONS="--max-old-space-size=4096" \
    UV_THREADPOOL_SIZE=16

# Override command for stress tests
CMD ["./tests/ci/test-runner.sh", "--type", "stress"]

# E2E test image with full system setup
FROM test-runner AS e2e-test

# Switch to root for system setup
USER root

# Install additional tools for E2E testing
RUN apk add --no-cache \
    chromium \
    chromium-chromedriver \
    xvfb \
    && rm -rf /var/cache/apk/*

# Configure Chrome for headless operation
RUN mkdir -p /home/hydra/.config/chromium && \
    chown -R hydra:hydra /home/hydra/.config

# Switch back to non-root user
USER hydra

# Set Chrome environment variables
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/bin/chromium-browser \
    CHROMIUM_FLAGS="--no-sandbox --headless --disable-gpu --disable-dev-shm-usage"

# Override command for E2E tests
CMD ["./tests/ci/test-runner.sh", "--type", "e2e"]

# Final production image with minimal footprint
FROM test-runner

# Add labels for container identification
LABEL maintainer="Hydra CLI Team" \
      version="1.0.0" \
      description="Hydra CLI comprehensive test suite" \
      org.opencontainers.image.title="Hydra CLI Test Runner" \
      org.opencontainers.image.description="Production-ready testing environment for Hydra CLI" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.vendor="Hydra CLI" \
      org.opencontainers.image.licenses="MIT"

# Expose ports for test services
EXPOSE 3000 3001 9100

# Set resource limits (can be overridden in docker-compose)
ENV JEST_MAX_WORKERS=2 \
    JEST_TIMEOUT=300000 \
    COVERAGE_THRESHOLD=95

# Default entrypoint
ENTRYPOINT ["./tests/ci/test-runner.sh"]

# Default arguments
CMD ["--type", "all", "--coverage", "95"]